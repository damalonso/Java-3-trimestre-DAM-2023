###################
###  ARRAYLIST  ###
###################

Es un array pero de tamaño variable. Es decir, vamos a poder modificar el tamaño de ese array en cualquier 
momento de la ejecución. 
Es una estructura dinámica de datos. 

Con el uso de estos array vamos a reservar solo la memoria que necesitamos en cada caso y liberar la que no necesitamos. 

#Como definimos una colección de datos Array List 
ArrayList <tipo> nombreArrayList = new ArrayList(); // El tipo en algunos casos se puede omitir, sino se define seria del tipo genérico object 

# Pare definir el tipo de dato del ArrayList tendremos que usar la clase envolvente en vez de la clase primitivo:
Tipo primitivo      Clase Envolvente 
byte                Byte
short               Short
int                 Integer
long                Long
float               Float
double              Double
char                Character
boolean             Boolean

# Para definir un ArrayList de "Objetos":
ArrayList <nombreObjeto> nombreArrayList = new ArrayList<>();

# Para definir un ArrayList de "String":
ArrayList<String> nombreArrayList = new ArrayList<String>();

# Añade el elemento al ArrayList
nombreArrayList.add("Elemento"); // En ArrayList normal
nombreArrayList.add(new nombreObjeto()); // En ArrayList de objetos

# Añade el elemento al ArrayList en la posición 'n'
nombreArrayList.add(n, "Elemento 2");   // En ArrayList normal
nombreArrayList.add(n, new nombreObjeto());    // En ArrayList de objetos

# Devuelve el numero de elementos del ArrayList (lo que es decir devuelve la longitud del ArrayList)
nombreArrayList.size();

# Devuelve el elemento que esta en la posición '2' del ArrayList
nombreArrayList.get(2); // En ArrayList normal
nombreArrayList.get(2).getId(); // En ArrayList de objetos

# Comprueba se existe del elemento ('Elemento') que se le pasa como parametro
nombreArrayList.contains("Elemento");

# Devuelve la posición de la primera ocurrencia ('Elemento') en el ArrayList  
nombreArrayList.indexOf("Elemento");

# Devuelve la posición de la última ocurrencia ('Elemento') en el ArrayList   
nombreArrayList.lastIndexOf("Elemento");

# Borra el elemento de la posición '3' del ArrayList. Devuelve true si el elemento se ha eliminado.
nombreArrayList.remove(3); 

# Borra la primera ocurrencia del 'Elemento' que se le pasa como parametro.  
nombreArrayList.remove("Elemento");

# Borra todos los elementos de ArrayList, que es lo mismo que vaciar el ArrayList
nombreArrayList.clear();

# Devuelve True si el ArrayList esta vacio. Sino Devuelve False   
nombreArrayList.isEmpty();  

# Copiar un ArrayList 
ArrayList arrayListCopia = (ArrayList) nombreArrayList.clone();  

# Pasa el ArrayList a un Array 
Object[] array = nombreArrayList.toArray(); 

# Pare recorrer un ArrayList tenemos varias formas:
- Bucle for
for(int i = 0;i < nombreArrayList.size();i++){
    System.out.println(nombreArrayList.get(i));      
}
- Bucle foreach
for(Integer i: nombreArrayList){
    System.out.println(i);                 
}
- Si el array contiene objetos lo hacemos:
for(nombreObjeto e : nombreArrayList){
    System.out.println(e);                 
}